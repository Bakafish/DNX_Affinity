# DNX Server Sample Configuration File

# ---------------------------------------------------------------------------
# Communications Settings
# ---------------------------------------------------------------------------

# REQUIRED: DNX server dispatcher bind address.
# Client nodes request jobs from the dispatcher via the server's host
# address, this URL port, and the protocol specified in this URL scheme.

channelDispatcher = udp://0.0.0.0:12480

# REQUIRED: DNX server collector bind address.
# Client nodes post job result to the collector via the server's host
# address, this URL port, and the protocol specified in this URL scheme.

channelCollector = udp://0.0.0.0:12481

# OPTIONAL: Authorized Client IP Addresses.
# Nodes not specified here, (in a comma-separated list of IP addresses or 
# DNS names) are ignored by the dispatcher. This parameter is recommended
# for security purposes. There is no default value. If this parameter is not
# specified, then node authentication is *NOT* performed, which means that 
# jobs requests from ANY node will be honored by the server's dispatcher 
# thread.

#authWorkerNodes = 10.51.94.103, 10.51.94.105

# OPTIONAL: Maximum *concurrent* client job requests that DNX will enqueue.
# Additional concurrent requests will be added to the request queue, but will
# push the oldest request off the bottom. The default value is the largest 
# 32-bit positive signed value.

#maxNodeRequests = 0x7FFFFFFF

# ---------------------------------------------------------------------------
# Internal tuning parameters
# ---------------------------------------------------------------------------

# OPTIONAL: Minimum number of service check slots to allocate.
# DNX automatically calculates how many service checks are defined in Nagios 
# at start-up. The value of this setting comes into play if and when Nagios 
# allows a user to dynamically add services without reloading or restarting 
# Nagios. This must be equal to or greater that the actual number of service 
# checks defined in the Nagios configuration file. The default value is the
# arbitrary value of 100.

#minServiceSlots = 100

# OPTIONAL: How often the DNX timer thread should poll for expiring jobs.
# This value is specified in seconds. The default value is 5 seconds.

#expirePollInterval = 5

# ---------------------------------------------------------------------------
# Control Options
# ---------------------------------------------------------------------------

# OPTIONAL: Local service check regular expression.
# This allows you to specify a regular expression which will be used to 
# disqualify matching service checks as candidates for remote execution by 
# DNX. Use this to make sure your local host checks stay local. There is no
# default value. If this parameter is not specified, then *ALL* Nagios checks 
# will be handled by DNX.

#localCheckPattern = .*local.*

# OPTIONAL: Plugin synchronization script.
# If specified, DNX will execute the external script specified in this
# directive *before* Nagios begins scheduling service checks. This is 
# particularly useful for pushing-out or syncing any updated or new plugins 
# to the DNX Client Nodes. Note that Nagios waits for this script to complete
# before continuing its regular activities. There is no default value. If this
# value is not specified, then no sync script will be executed.

#syncScript = /usr/local/nagios/libexec/sync_plugins.pl

# ---------------------------------------------------------------------------
# Error and debug logging
#
# For DNX server module error and debug logging, recognized symbolic syslog 
# facility codes include: LOG_DAEMON, LOG_USER, and LOG_LOCAL0 - LOG_LOCAL7.
# ---------------------------------------------------------------------------

# OPTIONAL: General error and informational message logging output file.
# Set this option to specify the location of the error log file. By default,
# error and informational log messages are sent to syslog using LOG_DAEMON 
# syslog facility code, using the LOG_ERR or LOG_INFO (resp) logging levels. 
# However, error and informational log messages may be redirected to a named 
# log file though the use of this configuration option. Any recognized syslog
# facility code may be specified by placing the symbolic name of the facility 
# code in angle brackets. A full path to a log file may also be specified 
# without angle brackets.

#logFile = <LOG_DAEMON>

# OPTIONAL: Debug message logging output file.
# Set this option to specify the location of the debug log file. By default,
# debug log messages are sent to syslog using LOG_DAEMON syslog facility code
# in conjunction with the LOG_DEBUG logging level. However, debug messages may 
# be redirected to a named log file though the use of this configuration 
# option. Any recognized syslog facility code may be specified by placing the 
# symbolic name of the facility code in angle brackets. A full path to a log 
# file may also be specified without angle brackets.

#debugFile = <LOG_DAEMON>

# OPTIONAL: The DNX debug verbosity level.
# Set this parameter to non-zero to enable debug output to the debug log. The 
# higher the value, the more verbose the output. Note however that not every 
# level provides additional verbosity. Output to a given level is hard-coded 
# into DNX on a per-message basis. The default value is 0, which disables all 
# debugging output.

#debugLevel = 0

